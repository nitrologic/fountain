ìè¢ harp
ìè£ sistrum

‚Ä¢ Coptic (Sahidic Dialect):*
‚≤ö‚≤ì‚≤ô ‚≤õ‚≤Å‚≤£‚≤ì‚≤≠‚≤£‚≤ì‚≤•‚≤ß‚≤ü‚≤• ‚≤ô‚≤°‚≤ì‚≤ü‚≤©‚≤±‚≤õœ© ‚≤â‚≤É‚≤ü‚≤ó.
‚≤†‚≤â‚≤õ‚≤ì‚≤±‚≤ß ‚≤âœ•œØ‚≤ô‚≤â ‚≤ô‚≤ô‚≤ü‚≤õ.

‚Ä¢ English:*
"We are Christians of the true light.
Our Father gives wisdom daily."

This uses:
- Standard Sahidic Coptic vocabulary
- The Coptic alphabet from your bibli.json (‚≤Å-‚≤± + œ¢-œÆ)
- Simple grammatical structure


https://en.wikipedia.org/wiki/List_of_Egyptian_hieroglyphs

ìÑ∞ìÑ±ìÑ≤ìÑ≥ìÑ¥ìÑµìÑ∂ìÑ∑ìÑ±ìÑ∞

ìÑ∏

//			const timeout = setTimeout(() => {refreshBackground(5)}, 1000); // 5-second timeout


async function promptForge2(message) {
	if(!roha.config.rawprompt) return prompt(message);
	let result="";
	if (message) {
		await writer.write(encoder.encode(message));
		await writer.ready;
	}
	if(roha.config.page) {
		await writer.write(homeCursor);
	}
	Deno.stdin.setRaw(true);
	try {
		let busy=true;
		while (busy) {
			const { value, done }=await reader.read();
			if (done || !value) break;
			let bytes=[];
			for (const byte of value) {
				if (byte === 0x7F || byte === 0x08) { // Backspace
					if (promptBuffer.length > 0) {
						promptBuffer=promptBuffer.slice(0, -1);
						bytes.push(0x08, 0x20, 0x08);
					}
				} else if (byte === 0x1b) { // Escape sequence
					if (value.length === 1) {
						await exitForge();
						Deno.exit(0);
					}
					if (value.length === 3) {
						if (value[1] === 0xf4 && value[2] === 0x50) {
							echo("F1");
						}
					}
					break;
				} else if (byte === 0x0A || byte === 0x0D) { // Enter key
					bytes.push(0x0D, 0x0A);
					const line=decoder.decode(promptBuffer);
					let n=line.length;
					if (n > 0) {
						promptBuffer=promptBuffer.slice(n);
					}
					result=line.trimEnd();
					await log(result, "stdin");
					busy=false;
				} else {
					bytes.push(byte);
					const buf=new Uint8Array(promptBuffer.length + 1);
					buf.set(promptBuffer);
					buf[promptBuffer.length]=byte;
					promptBuffer=buf;
				}
			}
			if (bytes.length) await writer.write(new Uint8Array(bytes));
		}
	}catch(e){
		echo("promptForge","threw",e);
	} finally {
		Deno.stdin.setRaw(false);
	}
	if(roha.config.page) await writer.write(homeCursor);
	return result;
}


bibli.spec.unicode.lexis.ìÖ∑ìÖΩ

"latin": {
"name": "Latin",
"description": "Latin linguistic roots and Unicode characters",
"alphabet": {
"lower": "abcdefghijklmnopqrstuvwxyz",
"upper": "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
"uncommon": "√Ü√¶≈í≈ì√û√æ√ê√∞∆∑ í»ú»ù"
},
"lingua": {
"core": "verbum nomen ratio vox forma scriptum",
"verbs": "ago dico facio scribo video voco",
"concepts": "veritas virtus tempus lex ars scientia",
"ends": {
"noun": "us a um io ix io",
"verb": "are ere ire ior",
"abstract": "tio io tas men",
"agent": "tor trix or"
}
},

moueson
echo "\033[?1003h\033[?1015h\033[?1006h"
// stty -echo
// But we can still catch them in the STDIN
// We get 16 bits sequences like 35;15;7M where 35 is the mouse move, and the two next numbers are the row and colums numbers + the M ending.

//Then to reset:  echo
mouseoff
"\033[?1000l"

We could similarly catch clicks, mouse wheels, and mouse button wheel. This way we could implement buttons and buffer mouse scrolling. More details on mouse support in this post: https://stackoverflow.com/a/58390575/2494754

Other good one the Clipboard copy:

echo -e '\e]52;c;SGVsbG8gR2l0aHVi'


logy prefix words:
biblio bio chrono ethno topo geo anthro archaeo astro crimin dem etymo
hodo hydr myco neuro paleo pheno psycho socio theo zo
eco mytho philo onco seismo
aero- (aerology: study of the atmosphere)
agro- (agrology: study of soils)
cosmo- (cosmology: study of the universe)
crypto- (cryptology: study of codes)
dendro- (dendrology: study of trees)
eno- (enology: study of wine)
entom- (entomology: study of insects)
glotto- (glottology: study of languages)
graph- (graphology: study of handwriting)
hemato- (hematology: study of blood)
ichthyo- (ichthyology: study of fish)
litho- (lithology: study of rocks)
meteo- (meteorology: study of weather)
morpho- (morphology: study of forms/structures)
nepho- (nephology: study of clouds)
noso- (nosology: study of disease classification)
odonto- (odontology: study of teeth)
orni- (ornithology: study of birds)
patho- (pathology: study of diseases)
phreno- (phrenology: study of skull shapes, now obsolete)
pomo- (pomology: study of fruit)
rheu- (rheumatology: study of rheumatic diseases)
speleo- (speleology: study of caves)
techno- (technology: study/application of techniques)
vexillo- (vexillology: study of flags)

Using these above, you can make pink text like so:

\033[38;5;206m     #That is, \033[38;5;<FG COLOR>m

And make an early-morning blue background using

\033[48;5;57m      #That is, \033[48;5;<BG COLOR>m
And, of course, you can combine these:

\033[38;5;206;48;5;57m
The 8-bit colours are arranged like so:

Range	Description
0x00-0x07	standard colors (same as the 4-bit colours)
0x08-0x0F	high intensity colors
0x10-0xE7	6 √ó 6 √ó 6 cube (216 colors): 16 + 36 √ó r + 6 √ó g + b (0 ‚â§ r, g, b ‚â§ 5)
0xE8-0xFF	grayscale from black to white in 24 steps

class pixels2{
	width: number;
	height: number;
	bits: boolean[];
	constructor(width:number,height:number) {
		this.width = width;
		this.height = height;
		this.bits = new Array(width*height).fill(false);
		const words=(width+15)/16;
	}
	clear(){
		const n=this.bits.length;
		for(let xy=0;xy<n;xy++){
			const r=Math.random();
			this.bits[xy]=r>0.3?true:false;
		}
	}
	frame():string[]{
		const w=this.width;
		const h=this.height;
		const bits=this.bits;
		const cols:number=h/2;
		const rows:number=w/2;
		const lines:string[]=[];
		for(let y:number=0;y<cols;y++){
			let line:string[]=[];
			const y0=2*y*w;
			const y1=y0+w;
			for(let x:number=0;x<rows;x++){
				const b4:boolean[]=[
					bits[y0+x*2+0],
					bits[y0+x*2+1],
					bits[y1+x*2+0],
					bits[y1+x*2+1]
				];
				const index:number=(b4[0]?1:0)+(b4[1]?2:0)+(b4[2]?4:0)+(b4[3]?8:0);
				const q4=quads.charAt(index);
				line.push(q4);
			}
			lines.push(line.join(""));
		}
		return lines;
	}
};



const Leds="‚ö´‚ö™üîµüü¢üî¥üü°üü£üü†üü§";
const dots = ["üü£", "üîµ", "üü¢", "üü°", "üî¥"];

function blankFrame2(){
	const w=32;
	const h=12;
	const bits:boolean[]=new Array(w*h);
	for(let xy=0;xy<w*h;xy++){
		const r=Math.random();
		bits[xy]=r>0.3?true:false;
	}
	const cols=h/2;
	const rows=w/2;
	const lines:string[]=new Array(rows);
	for(let y=0;y<cols;y++){
		let line:string[]=[];
		const y0=2*y*w;
		const y1=y0+w;
		for(let x=0;x<rows;x++){
			const b4:boolean[]=[
				bits[y0+x*2+0],
				bits[y0+x*2+1],
				bits[y1+x*2+0],
				bits[y1+x*2+1]
			];
			const index:number=(b4[0]?1:0)+(b4[1]?2:0)+(b4[2]?4:0)+(b4[3]?8:0);
			const q4=quads.charAt(index);
			line.push(q4);
		}
		lines[y]=line.join("");
	}
	return lines.join("\n");
}



// slop 0.1 const bloks=" ‚ñò‚ñù‚ñó‚ñÑ‚ñå‚ñû‚ññ‚ñú‚ñö‚ñê‚ñÄ‚ñõ‚ñô‚ñü‚ñà"


/*
const blocks=" ‚ñò‚ñù‚ññ‚ñó‚ñå‚ñê‚ñÄ‚ñÑ‚ñö‚ñû‚ñõ‚ñú‚ñô‚ñü‚ñà";
const blockbits=[0, 1,2,4,8, 5,10,3,12,9,6, 7,11,13,14, 15];
let blits=Array(16).fill(" ");
for(let index=0;index<16;index++){
	const bit=blockbits[index];
	blits[bit]=blocks.charAt(index);
}
console.log(blits.join(""));
*/


{
  "hieroglyph": {
    "base": {
      "description": "Egyptian Hieroglyph A001 (Seated Man)",
      "codepoint": "U+13000",
      "character": "ìÄÄ"
    },
    "variants": [
      {
        "rotation": "90 degrees",
        "variation_selector": "VS1",
        "codepoint": "U+13000 U+FE00",
        "character_sequence": "ìÄÄÔ∏Ä"
      },
      {
        "rotation": "180 degrees",
        "variation_selector": "VS2",
        "codepoint": "U+13000 U+FE01",
        "character_sequence": "ìÄÄÔ∏Å"
      }
    ]
  }

"all":
"ìÄÄìÄÅìÄÇìÄÉìÄÑìÄÖìÄÜìÄáìÄàìÄâìÄäìÄãìÄåìÄçìÄéìÄèìÄêìÄëìÄíìÄììÄîìÄïìÄñìÄóìÄòìÄôìÄöìÄõìÄúìÄùìÄûìÄüìÄ†ìÄ°ìÄ¢ìÄ£ìÄ§ìÄ•ìÄ¶ìÄßìÄ®ìÄ©ìÄ™ìÄ´ìÄ¨ìÄ≠ìÄÆìÄØìÄ∞ìÄ±ìÄ≤ìÄ≥ìÄ¥ìÄµìÄ∂ìÄ∑ìÄ∏ìÄπìÄ∫ìÄªìÄºìÄΩìÄæìÄøìÅÄìÅÅìÅÇìÅÉìÅÑìÅÖìÅÜìÅáìÅàìÅâìÅäìÅãìÅåìÅçìÅéìÅèìÅêìÅëìÅíìÅììÅîìÅïìÅñìÅóìÅòìÅôìÅöìÅõìÅúìÅùìÅûìÅüìÅ†ìÅ°ìÅ¢ìÅ£ìÅ§ìÅ•ìÅ¶ìÅßìÅ®ìÅ©ìÅ™ìÅ´ìÅ¨ìÅ≠ìÅÆìÅØìÅ∞ìÅ±ìÅ≤ìÅ≥ìÅ¥ìÅµìÅ∂ìÅ∑ìÅ∏ìÅπìÅ∫ìÅªìÅºìÅΩìÅæìÅøìÇÄìÇÅìÇÇìÇÉìÇÑìÇÖìÇÜìÇáìÇàìÇâìÇäìÇãìÇåìÇçìÇéìÇèìÇêìÇëìÇíìÇììÇîìÇïìÇñìÇóìÇòìÇôìÇöìÇõìÇúìÇùìÇûìÇüìÇ†ìÇ°ìÇ¢ìÇ£ìÇ§ìÇ•ìÇ¶ìÇßìÇ®ìÇ©ìÇ™ìÇ´ìÇ¨ìÇ≠ìÇÆìÇØìÇ∞ìÇ±ìÇ≤ìÇ≥ìÇ¥ìÇµìÇ∂ìÇ∑ìÇ∏ìÇπìÇ∫ìÇªìÇºìÇΩìÇæìÇøìÉÄìÉÅìÉÇìÉÉìÉÑìÉÖìÉÜìÉáìÉàìÉâìÉäìÉãìÉåìÉçìÉéìÉèìÉêìÉëìÉíìÉììÉîìÉïìÉñìÉóìÉòìÉôìÉöìÉõìÉúìÉùìÉûìÉüìÉ†ìÉ°ìÉ¢ìÉ£ìÉ§ìÉ•ìÉ¶ìÉßìÉ®ìÉ©ìÉ™ìÉ´ìÉ¨ìÉ≠ìÉÆìÉØìÉ∞ìÉ±ìÉ≤ìÉ≥ìÉ¥ìÉµìÉ∂ìÉ∑ìÉ∏ìÉπìÉ∫ìÉªìÉºìÉΩìÉæìÉøìÑÄìÑÅìÑÇìÑÉìÑÑìÑÖìÑÜìÑáìÑàìÑâìÑäìÑãìÑåìÑçìÑéìÑèìÑêìÑëìÑíìÑììÑîìÑïìÑñìÑóìÑòìÑôìÑöìÑõìÑúìÑùìÑûìÑüìÑ†ìÑ°ìÑ¢ìÑ£ìÑ§ìÑ•ìÑ¶ìÑßìÑ®ìÑ©ìÑ™ìÑ´ìÑ¨ìÑ≠ìÑÆìÑØìÑ∞ìÑ±ìÑ≤ìÑ≥ìÑ¥ìÑµìÑ∂ìÑ∑ìÑ∏ìÑπìÑ∫ìÑªìÑºìÑΩìÑæìÑøìÖÄìÖÅìÖÇìÖÉìÖÑìÖÖìÖÜìÖáìÖàìÖâìÖäìÖãìÖåìÖçìÖéìÖèìÖêìÖëìÖíìÖììÖîìÖïìÖñìÖóìÖòìÖôìÖöìÖõìÖúìÖùìÖûìÖüìÖ†ìÖ°ìÖ¢ìÖ£ìÖ§ìÖ•ìÖ¶ìÖßìÖ®ìÖ©ìÖ™ìÖ´ìÖ¨ìÖ≠ìÖÆìÖØìÖ∞ìÖ±ìÖ≤ìÖ≥ìÖ¥ìÖµìÖ∂ìÖ∑ìÖ∏ìÖπìÖ∫ìÖªìÖºìÖΩìÖæìÖøìÜÄìÜÅìÜÇìÜÉìÜÑìÜÖìÜÜìÜáìÜàìÜâìÜäìÜãìÜåìÜçìÜéìÜèìÜêìÜëìÜíìÜììÜîìÜïìÜñìÜóìÜòìÜôìÜöìÜõìÜúìÜùìÜûìÜüìÜ†ìÜ°ìÜ¢ìÜ£ìÜ§ìÜ•ìÜ¶ìÜßìÜ®ìÜ©ìÜ™ìÜ´ìÜ¨ìÜ≠ìÜÆìÜØìÜ∞ìÜ±ìÜ≤ìÜ≥ìÜ¥ìÜµìÜ∂ìÜ∑ìÜ∏ìÜπìÜ∫ìÜªìÜºìÜΩìÜæìÜøìáÄìáÅìáÇìáÉìáÑìáÖìáÜìááìáàìáâìáäìáãìáåìáçìáéìáèìáêìáëìáíìáììáîìáïìáñìáóìáòìáôìáöìáõìáúìáùìáûìáüìá†ìá°ìá¢ìá£ìá§ìá•ìá¶ìáßìá®ìá©ìá™ìá´ìá¨ìá≠ìáÆìáØìá∞ìá±ìá≤ìá≥ìá¥ìáµìá∂ìá∑ìá∏ìáπìá∫ìáªìáºìáΩìáæìáøìàÄìàÅìàÇìàÉìàÑìàÖìàÜìàáìààìàâìàäìàãìàåìàçìàéìàèìàêìàëìàíìàììàîìàïìàñìàóìàòìàôìàöìàõìàúìàùìàûìàüìà†ìà°ìà¢ìà£ìà§ìà•ìà¶ìàßìà®ìà©ìà™ìà´ìà¨ìà≠ìàÆìàØìà∞ìà±ìà≤ìà≥ìà¥ìàµìà∂ìà∑ìà∏ìàπìà∫ìàªìàºìàΩìàæìàøìâÄìâÅìâÇìâÉìâÑìâÖìâÜìâáìâàìââìâäìâãìâåìâçìâéìâèìâêìâëìâíìâììâîìâïìâñìâóìâòìâôìâöìâõìâúìâùìâûìâüìâ†ìâ°ìâ¢ìâ£ìâ§ìâ•ìâ¶ìâßìâ®ìâ©ìâ™ìâ´ìâ¨ìâ≠ìâÆìâØìâ∞ìâ±ìâ≤ìâ≥ìâ¥ìâµìâ∂ìâ∑ìâ∏ìâπìâ∫ìâªìâºìâΩìâæìâøìäÄìäÅìäÇìäÉìäÑìäÖìäÜìäáìäàìäâìääìäãìäåìäçìäéìäèìäêìäëìäíìäììäîìäïìäñìäóìäòìäôìäöìäõìäúìäùìäûìäüìä†ìä°ìä¢ìä£ìä§ìä•ìä¶ìäßìä®ìä©ìä™ìä´ìä¨ìä≠ìäÆìäØìä∞ìä±ìä≤ìä≥ìä¥ìäµìä∂ìä∑ìä∏ìäπìä∫ìäªìäºìäΩìäæìäøìãÄìãÅìãÇìãÉìãÑìãÖìãÜìãáìãàìãâìãäìããìãåìãçìãéìãèìãêìãëìãíìãììãîìãïìãñìãóìãòìãôìãöìãõìãúìãùìãûìãüìã†ìã°ìã¢ìã£ìã§ìã•ìã¶ìãßìã®ìã©ìã™ìã´ìã¨ìã≠ìãÆìãØìã∞ìã±ìã≤ìã≥ìã¥ìãµìã∂ìã∑ìã∏ìãπìã∫ìãªìãºìãΩìãæìãøìåÄìåÅìåÇìåÉìåÑìåÖìåÜìåáìåàìåâìåäìåãìååìåçìåéìåèìåêìåëìåíìåììåîìåïìåñìåóìåòìåôìåöìåõìåúìåùìåûìåüìå†ìå°ìå¢ìå£ìå§ìå•ìå¶ìåßìå®ìå©ìå™ìå´ìå¨ìå≠ìåÆìåØìå∞ìå±ìå≤ìå≥ìå¥ìåµìå∂ìå∑ìå∏ìåπìå∫ìåªìåºìåΩìåæìåøìçÄìçÅìçÇìçÉìçÑìçÖìçÜìçáìçàìçâìçäìçãìçåìççìçéìçèìçêìçëìçíìçììçîìçïìçñìçóìçòìçôìçöìçõìçúìçùìçûìçüìç†ìç°ìç¢ìç£ìç§ìç•ìç¶ìçßìç®ìç©ìç™ìç´ìç¨ìç≠ìçÆìçØìç∞ìç±ìç≤ìç≥ìç¥ìçµìç∂ìç∑ìç∏ìçπìç∫ìçªìçºìçΩìçæìçøìéÄìéÅìéÇìéÉìéÑìéÖìéÜìéáìéàìéâìéäìéãìéåìéçìééìéèìéêìéëìéíìéììéîìéïìéñìéóìéòìéôìéöìéõìéúìéùìéûìéüìé†ìé°ìé¢ìé£ìé§ìé•ìé¶ìéßìé®ìé©ìé™ìé´ìé¨ìé≠ìéÆìéØìé∞ìé±ìé≤ìé≥ìé¥ìéµìé∂ìé∑ìé∏ìéπìé∫ìéªìéºìéΩìéæìéøìèÄìèÅìèÇìèÉìèÑìèÖìèÜìèáìèàìèâìèäìèãìèåìèçìèéìèèìèêìèëìèíìèììèîìèïìèñìèóìèòìèôìèöìèõìèúìèùìèûìèüìè†ìè°ìè¢ìè£ìè§ìè•ìè¶ìèßìè®ìè©ìè™ìè´ìè¨ìè≠ìèÆìèØìè∞ìè±ìè≤ìè≥ìè¥ìèµìè∂ìè∑ìè∏ìèπìè∫ìèªìèºìèΩìèæìèøìêÄìêÅìêÇìêÉìêÑìêÖìêÜìêáìêàìêâìêäìêãìêåìêçìêéìêèìêêìêëìêíìêììêîìêïìêñìêóìêòìêôìêöìêõìêúìêùìêûìêüìê†ìê°ìê¢ìê£ìê§ìê•ìê¶ìêßìê®ìê©ìê™ìê´ìê¨ìê≠ìêÆìêØ",

cartouches


{
	"ìÉ±": "giraffe"
	"ìÉ∞": "elephant"
	"ìÉ¨": "lion",
	"ìÉÆ": "leopard",
	"ìÉ≤": "oryx",
	"ìÉ¥": "gazelle",
	"ìÉØ": "hippo",
	"ìÉ•": "jackal",
	"ìÉ¶": "hyena",
	"ìÉ∏": "monkey",
	"ìÉ∑": "baboon",
	"ìÉó": "horse",
	"ìÉò": "donkey",
	"ìÉü": "pig",
	"ìÉí": "bull",
	"ìÉö": "kid",
	"ìÉî": "calf",
	"ìÉñ": "suckling",
	"ìÉ†": "cat",
	"ìÉ°": "dog"
}

Aegyptus, Regular

Egyptian Hieroglyphs
Unicode version 5.2

Lo,Egyp
General classified as "Other_Letter" (Lo)
Script value "Egyptian Hieroglyphs" (Egyp).

[U+13000,U+1342F] encompassing 1,072 assigned code
[U+13460,U+143FF] Egyptian Hieroglyphs Extended-A

Gardiner‚Äôs Sign List 763 signs across 26 categories (A‚ÄìZ) various in AA

use : classifiers ideograms phonograms

standardized variants for rotated signs (100)
	VS1: U+FE00 for 90¬∞ rotation (40)
	VS2: U+FE01 for 180¬∞ rotation (22)

{
	"A": {
		"name": "Man and His Occupations",
		"description": "Signs depicting human figures, actions, or roles such as seated man, king, or soldier.",
		"count": 59
	},
	"B": {
		"name": "Woman and Her Occupations",
		"description": "Signs of women, female roles, or activities like seated woman or queen.",
		"count": 7
	},
	"C": {
		"name": "Anthropomorphic Deities",
		"description": "Deities with human-like forms, such as gods like Osiris or Horus.",
		"count": 11
	},
	"D": {
		"name": "Parts of the Human Body",
		"description": "Body parts like eye, hand, or leg.",
		"count": 63,
	},
	"E": {
		"name": "Mammals",
		"description": "Mammalian animals, including cat, lion, or cow.",
		"count": 34,
	},
	"F": {
		"name": "Parts of Mammals",
		"description": "Animal body parts such as horn or tail.",
		"count": 32,
	},
	"G": {
		"name": "Birds",
		"description": "Bird species and related signs, like owl or vulture.",
		"count": 54,
	},
	"H": {
		"name": "Parts of Birds",
		"description": "Bird body parts, such as wing or feather.",
		"count": 8
	},
	"I": {
		"name": "Amphibious Animals, Reptiles, etc.",
		"description": "Reptiles and amphibians, like snake or crocodile.",
		"count": 15
	},
	"K": {
		"name": "Fish and Parts of Fish",
		"description": "Fish and fish-related signs, such as fish or fin.",
		"count": 6,
	},
	"L": {
		"name": "Invertebrates and Lesser Animals",
		"description": "Insects and small creatures, like bee or scorpion.",
		"count": 7,
	},
	"M": {
		"name": "Trees and Plants",
		"description": "Vegetation, such as reed or lotus.",
		"count": 44,
	},
	"N": {
		"name": "Sky, Earth, Water",
		"description": "Natural features like sky, mountain, or water.",
		"count": 42
	},
	"O": {
		"name": "Buildings, Parts of Buildings, etc.",
		"description": "Architectural elements, such as house or pyramid.",
		"count": 51
	},
	"P": {
		"name": "Ships, Parts of Ships, etc.",
		"description": "Watercraft and related signs, like boat or sail.",
		"count": 11
	},
	"Q": {
		"name": "Domestic and Funerary Furniture",
		"description": "Household items, such as chair or bed.",
		"count": 7
	},
	"R": {
		"name": "Temple Furniture and Sacred Emblems",
		"description": "Religious objects, like altar or ankh.",
		"count": 25
	},
	"S": {
		"name": "Crowns, Dress, Staves, etc.",
		"description": "Regalia and symbols of power, such as crown or scepter.",
		"count": 45
	},
	"T": {
		"name": "Warfare, Hunting, Butchery",
		"description": "Weapons and tools, like bow or knife.",
		"count": 35
	},
	"U": {
		"name": "Agriculture, Crafts, and Professions",
		"description": "Tools and activities, such as plow or adze.",
		"count": 41
	},
	"V": {
		"name": "Rope, Fiber, Baskets, Bags, etc.",
		"description": "Cordage and containers, like rope or basket.",
		"count": 39
	},
	"W": {
		"name": "Vessels of Stone and Earthenware",
		"description": "Containers, such as jar or pot.",
		"count": 25
	},
	"X": {
		"name": "Loaves and Cakes",
		"description": "Bread and food items, like loaf.",
		"count": 8
	},
	"Y": {
		"name": "Writings, Games, Music",
		"description": "Cultural objects, such as scroll or harp.",
		"count": 8
	},
	"Z": {
		"name": "Strokes, Signs Derived from Hieratic, Geometrical Figures",
		"description": "Lines and shapes, like single stroke.",
		"count": 11
	},
	"AA": {
		"name": "Unclassified",
		"description": "Miscellaneous signs not fitting other categories.",
		"count": 31
	}
}


ìâ¥ìäΩìäΩìäΩìäΩìäΩìâ¥ìäΩìäΩìäΩìäΩìäΩìâ¥ìäΩìäΩìäΩìäΩìäΩìâ¥ìäΩìäΩìäΩìäΩìäΩìâ¥ìäΩìäΩìäΩìäΩìäΩìâ¥ìâµìâµìâµìâµìâµìâ¥ìäΩìäΩìäΩìäΩìäΩìâ¥ìäΩìäΩìäΩìäΩìäΩìâ¥ìäΩìäΩìäΩìäΩìäΩìâ¥ìäΩìäΩìäΩìäΩìäΩìâ¥ìäΩìäΩìäΩìäΩìäΩìâ¥

U+1300x	ìÄÄ	ìÄÅ	ìÄÇ	ìÄÉ	ìÄÑ	ìÄÖ	ìÄÜ	ìÄá	ìÄà	ìÄâ	ìÄä	ìÄã	ìÄå	ìÄç	ìÄé	ìÄè
U+1301x	ìÄê	ìÄë	ìÄí	ìÄì	ìÄî	ìÄï	ìÄñ	ìÄó	ìÄò	ìÄô	ìÄö	ìÄõ	ìÄú	ìÄù	ìÄû	ìÄü
U+1302x	ìÄ†	ìÄ°	ìÄ¢	ìÄ£	ìÄ§	ìÄ•	ìÄ¶	ìÄß	ìÄ®	ìÄ©	ìÄ™	ìÄ´	ìÄ¨	ìÄ≠	ìÄÆ	ìÄØ
U+1303x	ìÄ∞	ìÄ±	ìÄ≤	ìÄ≥	ìÄ¥	ìÄµ	ìÄ∂	ìÄ∑	ìÄ∏	ìÄπ	ìÄ∫	ìÄª	ìÄº	ìÄΩ	ìÄæ	ìÄø
U+1304x	ìÅÄ	ìÅÅ	ìÅÇ	ìÅÉ	ìÅÑ	ìÅÖ	ìÅÜ	ìÅá	ìÅà	ìÅâ	ìÅä	ìÅã	ìÅå	ìÅç	ìÅé	ìÅè
U+1305x	ìÅê	ìÅë	ìÅí	ìÅì	ìÅî	ìÅï	ìÅñ	ìÅó	ìÅò	ìÅô	ìÅö	ìÅõ	ìÅú	ìÅù	ìÅû	ìÅü
U+1306x	ìÅ†	ìÅ°	ìÅ¢	ìÅ£	ìÅ§	ìÅ•	ìÅ¶	ìÅß	ìÅ®	ìÅ©	ìÅ™	ìÅ´	ìÅ¨	ìÅ≠	ìÅÆ	ìÅØ
U+1307x	ìÅ∞	ìÅ±	ìÅ≤	ìÅ≥	ìÅ¥	ìÅµ	ìÅ∂	ìÅ∑	ìÅ∏	ìÅπ	ìÅ∫	ìÅª	ìÅº	ìÅΩ	ìÅæ	ìÅø
U+1308x	ìÇÄ	ìÇÅ	ìÇÇ	ìÇÉ	ìÇÑ	ìÇÖ	ìÇÜ	ìÇá	ìÇà	ìÇâ	ìÇä	ìÇã	ìÇå	ìÇç	ìÇé	ìÇè
U+1309x	ìÇê	ìÇë	ìÇí	ìÇì	ìÇî	ìÇï	ìÇñ	ìÇó	ìÇò	ìÇô	ìÇö	ìÇõ	ìÇú	ìÇù	ìÇû	ìÇü
U+130Ax	ìÇ†	ìÇ°	ìÇ¢	ìÇ£	ìÇ§	ìÇ•	ìÇ¶	ìÇß	ìÇ®	ìÇ©	ìÇ™	ìÇ´	ìÇ¨	ìÇ≠	ìÇÆ	ìÇØ
U+130Bx	ìÇ∞	ìÇ±	ìÇ≤	ìÇ≥	ìÇ¥	ìÇµ	ìÇ∂	ìÇ∑	ìÇ∏	ìÇπ	ìÇ∫	ìÇª	ìÇº	ìÇΩ	ìÇæ	ìÇø
U+130Cx	ìÉÄ	ìÉÅ	ìÉÇ	ìÉÉ	ìÉÑ	ìÉÖ	ìÉÜ	ìÉá	ìÉà	ìÉâ	ìÉä	ìÉã	ìÉå	ìÉç	ìÉé	ìÉè
U+130Dx	ìÉê	ìÉë	ìÉí	ìÉì	ìÉî	ìÉï	ìÉñ	ìÉó	ìÉò	ìÉô	ìÉö	ìÉõ	ìÉú	ìÉù	ìÉû	ìÉü
U+130Ex	ìÉ†	ìÉ°	ìÉ¢	ìÉ£	ìÉ§	ìÉ•	ìÉ¶	ìÉß	ìÉ®	ìÉ©	ìÉ™	ìÉ´	ìÉ¨	ìÉ≠	ìÉÆ	ìÉØ
U+130Fx	ìÉ∞	ìÉ±	ìÉ≤	ìÉ≥	ìÉ¥	ìÉµ	ìÉ∂	ìÉ∑	ìÉ∏	ìÉπ	ìÉ∫	ìÉª	ìÉº	ìÉΩ	ìÉæ	ìÉø
U+1310x	ìÑÄ	ìÑÅ	ìÑÇ	ìÑÉ	ìÑÑ	ìÑÖ	ìÑÜ	ìÑá	ìÑà	ìÑâ	ìÑä	ìÑã	ìÑå	ìÑç	ìÑé	ìÑè
U+1311x	ìÑê	ìÑë	ìÑí	ìÑì	ìÑî	ìÑï	ìÑñ	ìÑó	ìÑò	ìÑô	ìÑö	ìÑõ	ìÑú	ìÑù	ìÑû	ìÑü
U+1312x	ìÑ†	ìÑ°	ìÑ¢	ìÑ£	ìÑ§	ìÑ•	ìÑ¶	ìÑß	ìÑ®	ìÑ©	ìÑ™	ìÑ´	ìÑ¨	ìÑ≠	ìÑÆ	ìÑØ
U+1313x	ìÑ∞	ìÑ±	ìÑ≤	ìÑ≥	ìÑ¥	ìÑµ	ìÑ∂	ìÑ∑	ìÑ∏	ìÑπ	ìÑ∫	ìÑª	ìÑº	ìÑΩ	ìÑæ	ìÑø
U+1314x	ìÖÄ	ìÖÅ	ìÖÇ	ìÖÉ	ìÖÑ	ìÖÖ	ìÖÜ	ìÖá	ìÖà	ìÖâ	ìÖä	ìÖã	ìÖå	ìÖç	ìÖé	ìÖè
U+1315x	ìÖê	ìÖë	ìÖí	ìÖì	ìÖî	ìÖï	ìÖñ	ìÖó	ìÖò	ìÖô	ìÖö	ìÖõ	ìÖú	ìÖù	ìÖû	ìÖü
U+1316x	ìÖ†	ìÖ°	ìÖ¢	ìÖ£	ìÖ§	ìÖ•	ìÖ¶	ìÖß	ìÖ®	ìÖ©	ìÖ™	ìÖ´	ìÖ¨	ìÖ≠	ìÖÆ	ìÖØ
U+1317x	ìÖ∞	ìÖ±	ìÖ≤	ìÖ≥	ìÖ¥	ìÖµ	ìÖ∂	ìÖ∑	ìÖ∏	ìÖπ	ìÖ∫	ìÖª	ìÖº	ìÖΩ	ìÖæ	ìÖø
U+1318x	ìÜÄ	ìÜÅ	ìÜÇ	ìÜÉ	ìÜÑ	ìÜÖ	ìÜÜ	ìÜá	ìÜà	ìÜâ	ìÜä	ìÜã	ìÜå	ìÜç	ìÜé	ìÜè
U+1319x	ìÜê	ìÜë	ìÜí	ìÜì	ìÜî	ìÜï	ìÜñ	ìÜó	ìÜò	ìÜô	ìÜö	ìÜõ	ìÜú	ìÜù	ìÜû	ìÜü
U+131Ax	ìÜ†	ìÜ°	ìÜ¢	ìÜ£	ìÜ§	ìÜ•	ìÜ¶	ìÜß	ìÜ®	ìÜ©	ìÜ™	ìÜ´	ìÜ¨	ìÜ≠	ìÜÆ	ìÜØ
U+131Bx	ìÜ∞	ìÜ±	ìÜ≤	ìÜ≥	ìÜ¥	ìÜµ	ìÜ∂	ìÜ∑	ìÜ∏	ìÜπ	ìÜ∫	ìÜª	ìÜº	ìÜΩ	ìÜæ	ìÜø
U+131Cx	ìáÄ	ìáÅ	ìáÇ	ìáÉ	ìáÑ	ìáÖ	ìáÜ	ìáá	ìáà	ìáâ	ìáä	ìáã	ìáå	ìáç	ìáé	ìáè
U+131Dx	ìáê	ìáë	ìáí	ìáì	ìáî	ìáï	ìáñ	ìáó	ìáò	ìáô	ìáö	ìáõ	ìáú	ìáù	ìáû	ìáü
U+131Ex	ìá†	ìá°	ìá¢	ìá£	ìá§	ìá•	ìá¶	ìáß	ìá®	ìá©	ìá™	ìá´	ìá¨	ìá≠	ìáÆ	ìáØ
U+131Fx	ìá∞	ìá±	ìá≤	ìá≥	ìá¥	ìáµ	ìá∂	ìá∑	ìá∏	ìáπ	ìá∫	ìáª	ìáº	ìáΩ	ìáæ	ìáø
U+1320x	ìàÄ	ìàÅ	ìàÇ	ìàÉ	ìàÑ	ìàÖ	ìàÜ	ìàá	ìàà	ìàâ	ìàä	ìàã	ìàå	ìàç	ìàé	ìàè
U+1321x	ìàê	ìàë	ìàí	ìàì	ìàî	ìàï	ìàñ	ìàó	ìàò	ìàô	ìàö	ìàõ	ìàú	ìàù	ìàû	ìàü
U+1322x	ìà†	ìà°	ìà¢	ìà£	ìà§	ìà•	ìà¶	ìàß	ìà®	ìà©	ìà™	ìà´	ìà¨	ìà≠	ìàÆ	ìàØ
U+1323x	ìà∞	ìà±	ìà≤	ìà≥	ìà¥	ìàµ	ìà∂	ìà∑	ìà∏	ìàπ	ìà∫	ìàª	ìàº	ìàΩ	ìàæ	ìàø
U+1324x	ìâÄ	ìâÅ	ìâÇ	ìâÉ	ìâÑ	ìâÖ	ìâÜ	ìâá	ìâà	ìââ	ìâä	ìâã	ìâå	ìâç	ìâé	ìâè
U+1325x	ìâê	ìâë	ìâí	ìâì	ìâî	ìâï	ìâñ	ìâó	ìâò	ìâô	ìâö	ìâõ	ìâú	ìâù	ìâû	ìâü
U+1326x	ìâ†	ìâ°	ìâ¢	ìâ£	ìâ§	ìâ•	ìâ¶	ìâß	ìâ®	ìâ©	ìâ™	ìâ´	ìâ¨	ìâ≠	ìâÆ	ìâØ
U+1327x	ìâ∞	ìâ±	ìâ≤	ìâ≥	ìâ¥	ìâµ	ìâ∂	ìâ∑	ìâ∏	ìâπ	ìâ∫	ìâª	ìâº	ìâΩ	ìâæ	ìâø
U+1328x	ìäÄ	ìäÅ	ìäÇ	ìäÉ	ìäÑ	ìäÖ	ìäÜ	ìäá	ìäà	ìäâ	ìää	ìäã	ìäå	ìäç	ìäé	ìäè
U+1329x	ìäê	ìäë	ìäí	ìäì	ìäî	ìäï	ìäñ	ìäó	ìäò	ìäô	ìäö	ìäõ	ìäú	ìäù	ìäû	ìäü
U+132Ax	ìä†	ìä°	ìä¢	ìä£	ìä§	ìä•	ìä¶	ìäß	ìä®	ìä©	ìä™	ìä´	ìä¨	ìä≠	ìäÆ	ìäØ
U+132Bx	ìä∞	ìä±	ìä≤	ìä≥	ìä¥	ìäµ	ìä∂	ìä∑	ìä∏	ìäπ	ìä∫	ìäª	ìäº	ìäΩ	ìäæ	ìäø
U+132Cx	ìãÄ	ìãÅ	ìãÇ	ìãÉ	ìãÑ	ìãÖ	ìãÜ	ìãá	ìãà	ìãâ	ìãä	ìãã	ìãå	ìãç	ìãé	ìãè
U+132Dx	ìãê	ìãë	ìãí	ìãì	ìãî	ìãï	ìãñ	ìãó	ìãò	ìãô	ìãö	ìãõ	ìãú	ìãù	ìãû	ìãü
U+132Ex	ìã†	ìã°	ìã¢	ìã£	ìã§	ìã•	ìã¶	ìãß	ìã®	ìã©	ìã™	ìã´	ìã¨	ìã≠	ìãÆ	ìãØ
U+132Fx	ìã∞	ìã±	ìã≤	ìã≥	ìã¥	ìãµ	ìã∂	ìã∑	ìã∏	ìãπ	ìã∫	ìãª	ìãº	ìãΩ	ìãæ	ìãø
U+1330x	ìåÄ	ìåÅ	ìåÇ	ìåÉ	ìåÑ	ìåÖ	ìåÜ	ìåá	ìåà	ìåâ	ìåä	ìåã	ìåå	ìåç	ìåé	ìåè
U+1331x	ìåê	ìåë	ìåí	ìåì	ìåî	ìåï	ìåñ	ìåó	ìåò	ìåô	ìåö	ìåõ	ìåú	ìåù	ìåû	ìåü
U+1332x	ìå†	ìå°	ìå¢	ìå£	ìå§	ìå•	ìå¶	ìåß	ìå®	ìå©	ìå™	ìå´	ìå¨	ìå≠	ìåÆ	ìåØ
U+1333x	ìå∞	ìå±	ìå≤	ìå≥	ìå¥	ìåµ	ìå∂	ìå∑	ìå∏	ìåπ	ìå∫	ìåª	ìåº	ìåΩ	ìåæ	ìåø
U+1334x	ìçÄ	ìçÅ	ìçÇ	ìçÉ	ìçÑ	ìçÖ	ìçÜ	ìçá	ìçà	ìçâ	ìçä	ìçã	ìçå	ìçç	ìçé	ìçè
U+1335x	ìçê	ìçë	ìçí	ìçì	ìçî	ìçï	ìçñ	ìçó	ìçò	ìçô	ìçö	ìçõ	ìçú	ìçù	ìçû	ìçü
U+1336x	ìç†	ìç°	ìç¢	ìç£	ìç§	ìç•	ìç¶	ìçß	ìç®	ìç©	ìç™	ìç´	ìç¨	ìç≠	ìçÆ	ìçØ
U+1337x	ìç∞	ìç±	ìç≤	ìç≥	ìç¥	ìçµ	ìç∂	ìç∑	ìç∏	ìçπ	ìç∫	ìçª	ìçº	ìçΩ	ìçæ	ìçø
U+1338x	ìéÄ	ìéÅ	ìéÇ	ìéÉ	ìéÑ	ìéÖ	ìéÜ	ìéá	ìéà	ìéâ	ìéä	ìéã	ìéå	ìéç	ìéé	ìéè
U+1339x	ìéê	ìéë	ìéí	ìéì	ìéî	ìéï	ìéñ	ìéó	ìéò	ìéô	ìéö	ìéõ	ìéú	ìéù	ìéû	ìéü
U+133Ax	ìé†	ìé°	ìé¢	ìé£	ìé§	ìé•	ìé¶	ìéß	ìé®	ìé©	ìé™	ìé´	ìé¨	ìé≠	ìéÆ	ìéØ
U+133Bx	ìé∞	ìé±	ìé≤	ìé≥	ìé¥	ìéµ	ìé∂	ìé∑	ìé∏	ìéπ	ìé∫	ìéª	ìéº	ìéΩ	ìéæ	ìéø
U+133Cx	ìèÄ	ìèÅ	ìèÇ	ìèÉ	ìèÑ	ìèÖ	ìèÜ	ìèá	ìèà	ìèâ	ìèä	ìèã	ìèå	ìèç	ìèé	ìèè
U+133Dx	ìèê	ìèë	ìèí	ìèì	ìèî	ìèï	ìèñ	ìèó	ìèò	ìèô	ìèö	ìèõ	ìèú	ìèù	ìèû	ìèü
U+133Ex	ìè†	ìè°	ìè¢	ìè£	ìè§	ìè•	ìè¶	ìèß	ìè®	ìè©	ìè™	ìè´	ìè¨	ìè≠	ìèÆ	ìèØ
U+133Fx	ìè∞	ìè±	ìè≤	ìè≥	ìè¥	ìèµ	ìè∂	ìè∑	ìè∏	ìèπ	ìè∫	ìèª	ìèº	ìèΩ	ìèæ	ìèø
U+1340x	ìêÄ	ìêÅ	ìêÇ	ìêÉ	ìêÑ	ìêÖ	ìêÜ	ìêá	ìêà	ìêâ	ìêä	ìêã	ìêå	ìêç	ìêé	ìêè
U+1341x	ìêê	ìêë	ìêí	ìêì	ìêî	ìêï	ìêñ	ìêó	ìêò	ìêô	ìêö	ìêõ	ìêú	ìêù	ìêû	ìêü
U+1342x	ìê†	ìê°	ìê¢	ìê£	ìê§	ìê•	ìê¶	ìêß	ìê®	ìê©	ìê™	ìê´	ìê¨	ìê≠	ìêÆ	ìêØ
